# Makefile.in generated by automake 1.6.3 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 1.4 $ 
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
ARTSCCONFIG = @ARTSCCONFIG@
AS = @AS@
AUTODIRS = @AUTODIRS@
AWK = @AWK@
CC = @CC@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CXX = @CXX@
CXXCPP = @CXXCPP@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOXYGEN = @DOXYGEN@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_PROJECT_NUMBER = @DOXYGEN_PROJECT_NUMBER@
DPMSINC = @DPMSINC@
DPMSLIB = @DPMSLIB@
ECHO = @ECHO@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GLINC = @GLINC@
GLLIB = @GLLIB@
GMSGFMT = @GMSGFMT@
IDL = @IDL@
IDL_DEPENDENCIES = @IDL_DEPENDENCIES@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JAR = @JAR@
JAVAC = @JAVAC@
JAVAH = @JAVAH@
JVMLIBS = @JVMLIBS@
KDECONFIG = @KDECONFIG@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_HAS_DOXYGEN = @KDE_HAS_DOXYGEN@
KDE_HAVE_DOT = @KDE_HAVE_DOT@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBBZ2 = @LIBBZ2@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBGEN = @LIBGEN@
LIBJPEG = @LIBJPEG@
LIBMICO = @LIBMICO@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBPYTHON = @LIBPYTHON@
LIBQIMGIO = @LIBQIMGIO@
LIBRESOLV = @LIBRESOLV@
LIBSHADOW = @LIBSHADOW@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBSSL = @LIBSSL@
LIBTIFF = @LIBTIFF@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBZ = @LIBZ@
LIB_JASPER = @LIB_JASPER@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMGIO = @LIB_KIMGIO@
LIB_KIO = @LIB_KIO@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_QTOPIA = @LIB_QTOPIA@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LN_S = @LN_S@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MICO_INCLUDES = @MICO_INCLUDES@
MICO_LDFLAGS = @MICO_LDFLAGS@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJC = @OBJC@
OBJCFLAGS = @OBJCFLAGS@
OBJDUMP = @OBJDUMP@
PACKAGE = @PACKAGE@
PAMLIBS = @PAMLIBS@
PASSWDLIBS = @PASSWDLIBS@
PYTHONINC = @PYTHONINC@
PYTHONLIB = @PYTHONLIB@
PYTHONMODDIR = @PYTHONMODDIR@
QTDOCDIR = @QTDOCDIR@
QTE_NORTTI = @QTE_NORTTI@
QTOPIA_INCLUDES = @QTOPIA_INCLUDES@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
RC = @RC@
SETUIDFLAGS = @SETUIDFLAGS@
SSL_INCLUDES = @SSL_INCLUDES@
SSL_LDFLAGS = @SSL_LDFLAGS@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XPMINC = @XPMINC@
XPMLIB = @XPMLIB@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__include = @am__include@
am__quote = @am__quote@
idldir = @idldir@
install_sh = @install_sh@
jni_includes = @jni_includes@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
micodir = @micodir@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@

# this is the program that gets installed.  it's name is used for all
# of the other Makefile.am variables
bin_PROGRAMS = kerp kerp_client

# set the include path for X, qt and KDE
INCLUDES = $(all_includes)

# the library search path. 
kerp_LDFLAGS = $(KDE_RPATH) $(all_libraries)

# the libraries to link against.
kerp_LDADD = $(LIB_KFILE) $(LIB_KDEPRINT)

# which sources should be compiled for kerp
#>- kerp_SOURCES = main.cpp kerp.cpp kerpview.cpp pref.cpp kerpiface.skel formcity.ui invoiceview.ui test.ui Invoice.h Invoice.cpp
#>+ 1
kerp_SOURCES=main.cpp kerp.cpp kerpview.cpp pref.cpp     Invoice.h Invoice.cpp kerpiface_skel.cpp formcity.cpp invoiceview.cpp test.cpp

# these are the headers for your project
noinst_HEADERS = kerp.h kerpview.h pref.h

# client stuff
kerp_client_LDFLAGS = $(KDE_RPATH) $(all_libraries)
kerp_client_LDADD = $(LIB_KDECORE)
kerp_client_SOURCES = kerp_client.cpp

# let automoc handle all of the meta source files (moc)
#>- METASOURCES = AUTO

KDE_ICON = kerp

# this is where the kdelnk file will go 
kdelnkdir = $(kde_appsdir)/Utilities
kdelnk_DATA = kerp.desktop

# this is where the XML-GUI resource file goes
rcdir = $(kde_datadir)/kerp
rc_DATA = kerpui.rc
subdir = src
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
bin_PROGRAMS = kerp$(EXEEXT) kerp_client$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_kerp_OBJECTS = main.$(OBJEXT) kerp.$(OBJEXT) kerpview.$(OBJEXT) \
	pref.$(OBJEXT) Invoice.$(OBJEXT)
#>- kerp_OBJECTS = $(am_kerp_OBJECTS)
#>+ 6
kerp_final_OBJECTS = kerp.all_cpp.o 
kerp_nofinal_OBJECTS = main.$(OBJEXT) kerp.$(OBJEXT) kerpview.$(OBJEXT) \
	pref.$(OBJEXT) Invoice.$(OBJEXT) kerpiface_skel.$(OBJEXT) formcity.$(OBJEXT) invoiceview.$(OBJEXT) test.$(OBJEXT)\
Invoice.moc.o 
@KDE_USE_FINAL_FALSE@kerp_OBJECTS = $(kerp_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@kerp_OBJECTS = $(kerp_final_OBJECTS)
kerp_DEPENDENCIES =
am_kerp_client_OBJECTS = kerp_client.$(OBJEXT)
#>- kerp_client_OBJECTS = $(am_kerp_client_OBJECTS)
#>+ 1
kerp_client_OBJECTS = kerp_client.$(OBJEXT)
kerp_client_DEPENDENCIES =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- @AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/Invoice.Po ./$(DEPDIR)/kerp.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/kerp_client.Po ./$(DEPDIR)/kerpview.Po \
#>- @AMDEP_TRUE@	./$(DEPDIR)/main.Po ./$(DEPDIR)/pref.Po
#>+ 7
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@DEP_FILES =  $(DEPDIR)/kerpiface_skel.P $(DEPDIR)/formcity.P $(DEPDIR)/invoiceview.P $(DEPDIR)/test.P $(DEPDIR)/Invoice.moc.P  $(DEPDIR)/kerp.all_cpp.P $(DEPDIR)/kerp_client.all_cpp.P  ./$(DEPDIR)/Invoice.Po ./$(DEPDIR)/kerp.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/kerp_client.Po ./$(DEPDIR)/kerpview.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_TRUE@	@AMDEP_TRUE@	./$(DEPDIR)/main.Po ./$(DEPDIR)/pref.Po
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@DEP_FILES =  $(DEPDIR)/kerpiface_skel.P $(DEPDIR)/formcity.P $(DEPDIR)/invoiceview.P $(DEPDIR)/test.P $(DEPDIR)/Invoice.moc.P  ./$(DEPDIR)/Invoice.Po ./$(DEPDIR)/kerp.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/kerp_client.Po ./$(DEPDIR)/kerpview.Po \
@AMDEP_TRUE@@KDE_USE_FINAL_FALSE@	@AMDEP_TRUE@	./$(DEPDIR)/main.Po ./$(DEPDIR)/pref.Po

#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --mode=compile $(CXX) $(DEFS) \
#>- 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#>- 	$(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --mode=compile --tag=CXX $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
#>- 	$(AM_LDFLAGS) $(LDFLAGS) -o $@
#>+ 2
CXXLINK = $(LIBTOOL) --mode=link --tag=CXX $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXFLAGS = @CXXFLAGS@
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(kerp_SOURCES) $(kerp_client_SOURCES)
DATA = $(kdelnk_DATA) $(rc_DATA)

HEADERS = $(noinst_HEADERS)

DIST_COMMON = $(noinst_HEADERS) Makefile.am Makefile.in
SOURCES = $(kerp_SOURCES) $(kerp_client_SOURCES)

#>- all: all-am
#>+ 1
all: docs-am  all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu  src/Makefile
#>+ 3
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/Makefile.in
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
kerp$(EXEEXT): $(kerp_OBJECTS) $(kerp_DEPENDENCIES) 
	@rm -f kerp$(EXEEXT)
	$(CXXLINK) $(kerp_LDFLAGS) $(kerp_OBJECTS) $(kerp_LDADD) $(LIBS)
kerp_client$(EXEEXT): $(kerp_client_OBJECTS) $(kerp_client_DEPENDENCIES) 
	@rm -f kerp_client$(EXEEXT)
	$(CXXLINK) $(kerp_client_LDFLAGS) $(kerp_client_OBJECTS) $(kerp_client_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Invoice.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kerp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kerp_client.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/kerpview.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pref.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

.cpp.lo:
@AMDEP_TRUE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(LTCXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<
CXXDEPMODE = @CXXDEPMODE@

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:
kdelnkDATA_INSTALL = $(INSTALL_DATA)
install-kdelnkDATA: $(kdelnk_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(kdelnkdir)
	@list='$(kdelnk_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(kdelnkDATA_INSTALL) $$d$$p $(DESTDIR)$(kdelnkdir)/$$f"; \
	  $(kdelnkDATA_INSTALL) $$d$$p $(DESTDIR)$(kdelnkdir)/$$f; \
	done

uninstall-kdelnkDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(kdelnk_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(kdelnkdir)/$$f"; \
	  rm -f $(DESTDIR)$(kdelnkdir)/$$f; \
	done
rcDATA_INSTALL = $(INSTALL_DATA)
install-rcDATA: $(rc_DATA)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(rcdir)
	@list='$(rc_DATA)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(rcDATA_INSTALL) $$d$$p $(DESTDIR)$(rcdir)/$$f"; \
	  $(rcDATA_INSTALL) $$d$$p $(DESTDIR)$(rcdir)/$$f; \
	done

uninstall-rcDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(rc_DATA)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(rcdir)/$$f"; \
	  rm -f $(DESTDIR)$(rcdir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 4
KDE_DIST=kerpui.rc kerp.desktop partnerform.ui partnerform.ui.h test.ui invoiceview.ui formcity.ui.h formcity.ui kerpiface.h hi16-app-kerp.png hi32-app-kerp.png invoiceview.ui.h kerp.lsm 

DISTFILES= $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)


top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(DATA) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir) $(DESTDIR)$(kdelnkdir) $(DESTDIR)$(rcdir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-am
#>+ 1
clean: kde-rpo-clean  clean-am

#>- clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
#>+ 1
clean-am: clean-metasources clean-idl clean-ui clean-final  clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

#>- install-data-am: install-kdelnkDATA install-rcDATA
#>+ 1
install-data-am: install-kde-icons  install-kdelnkDATA install-rcDATA

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

#>- uninstall-am: uninstall-binPROGRAMS uninstall-info-am \
#>- 	uninstall-kdelnkDATA uninstall-rcDATA
#>+ 2
uninstall-am: uninstall-kde-icons  uninstall-binPROGRAMS uninstall-info-am \
	uninstall-kdelnkDATA uninstall-rcDATA

.PHONY: GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool distclean distclean-compile \
	distclean-depend distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-kdelnkDATA install-man install-rcDATA install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am \
	uninstall-kdelnkDATA uninstall-rcDATA


messages: rc.cpp
	$(XGETTEXT) *.cpp -o $(podir)/kerp.pot
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 5
kerpiface.kidl: $(srcdir)/kerpiface.h $(DCOP_DEPENDENCIES)
	$(DCOPIDL) $(srcdir)/kerpiface.h > kerpiface.kidl || ( rm -f kerpiface.kidl ; /bin/false )
kerpiface_skel.cpp: kerpiface.kidl
	$(DCOPIDL2CPP) --c++-suffix cpp --no-signals --no-stub kerpiface.kidl

#>+ 40
formcity.cpp: $(srcdir)/formcity.ui formcity.h formcity.moc
	rm -f formcity.cpp
	echo '#include <klocale.h>' > formcity.cpp
	$(UIC) -tr ${UIC_TR} -i formcity.h $(srcdir)/formcity.ui > formcity.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" formcity.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_formcity,g" >> formcity.cpp ;\
	rm -f formcity.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "formcity.moc"' >> formcity.cpp; else rm -f formcity.cpp ; exit $$ret ; fi

formcity.h: $(srcdir)/formcity.ui
	$(UIC) -o formcity.h $(srcdir)/formcity.ui

formcity.moc: formcity.h
	$(MOC) formcity.h -o formcity.moc
invoiceview.cpp: $(srcdir)/invoiceview.ui invoiceview.h invoiceview.moc
	rm -f invoiceview.cpp
	echo '#include <klocale.h>' > invoiceview.cpp
	$(UIC) -tr ${UIC_TR} -i invoiceview.h $(srcdir)/invoiceview.ui > invoiceview.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" invoiceview.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_invoiceview,g" >> invoiceview.cpp ;\
	rm -f invoiceview.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "invoiceview.moc"' >> invoiceview.cpp; else rm -f invoiceview.cpp ; exit $$ret ; fi

invoiceview.h: $(srcdir)/invoiceview.ui
	$(UIC) -o invoiceview.h $(srcdir)/invoiceview.ui

invoiceview.moc: invoiceview.h
	$(MOC) invoiceview.h -o invoiceview.moc
test.cpp: $(srcdir)/test.ui test.h test.moc
	rm -f test.cpp
	echo '#include <klocale.h>' > test.cpp
	$(UIC) -tr ${UIC_TR} -i test.h $(srcdir)/test.ui > test.cpp.temp ; ret=$$?; \
	sed -e "s,${UIC_TR}( \"\" ),QString::null,g" test.cpp.temp | sed -e "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | sed -e "s,image\([0-9][0-9]*\)_data,img\1_test,g" >> test.cpp ;\
	rm -f test.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "test.moc"' >> test.cpp; else rm -f test.cpp ; exit $$ret ; fi

test.h: $(srcdir)/test.ui
	$(UIC) -o test.h $(srcdir)/test.ui

test.moc: test.h
	$(MOC) test.h -o test.moc

#>+ 3
Invoice.moc.cpp: $(srcdir)/Invoice.h
	$(MOC) $(srcdir)/Invoice.h -o Invoice.moc.cpp

#>+ 3
pref.moc: $(srcdir)/pref.h
	$(MOC) $(srcdir)/pref.h -o pref.moc

#>+ 3
kerp.moc: $(srcdir)/kerp.h
	$(MOC) $(srcdir)/kerp.h -o kerp.moc

#>+ 3
kerpview.moc: $(srcdir)/kerpview.h
	$(MOC) $(srcdir)/kerpview.h -o kerpview.moc

#>+ 3
clean-metasources:
	-rm -f  Invoice.moc.cpp pref.moc kerp.moc kerpview.moc

#>+ 4
clean-idl:
	-rm -f \
	kerpiface_skel.cpp kerpiface_skel.h kerpiface.kidl 

#>+ 6
clean-ui:
	-rm -f \
	formcity.cpp formcity.h formcity.moc \
	invoiceview.cpp invoiceview.h invoiceview.moc \
	test.cpp test.h test.moc 

#>+ 2
docs-am:

#>+ 10
install-kde-icons:
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps
	$(INSTALL_DATA) $(srcdir)/hi16-app-kerp.png $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/kerp.png
	$(mkinstalldirs) $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps
	$(INSTALL_DATA) $(srcdir)/hi32-app-kerp.png $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/kerp.png

uninstall-kde-icons:
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/16x16/apps/kerp.png
	-rm -f $(DESTDIR)$(kde_icondir)/hicolor/32x32/apps/kerp.png

#>+ 6
force-reedit:
		cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/Makefile.in


#>+ 9
bcheck: bcheck-am

bcheck-am:
	test ! -r bchecktest.cc.class || mv -f bchecktest.cc.class bchecktest.cc.oldclass
	@echo "int main() {return 0;}" > bchecktest.cc
	for i in $(include_HEADERS); do echo "#include \"$$i\"" >> bchecktest.cc; done 
	test ! -s bchecktest.cc || $(CXXCOMPILE) --dump-class-hierarchy bchecktest.cc
	test ! -s bchecktest.cc.oldclass || test ! -s bchecktest.cc.class || cmp -s bchecktest.cc.oldclass bchecktest.cc.class

#>+ 11
kerp.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/main.cpp $(srcdir)/kerp.cpp $(srcdir)/kerpview.cpp $(srcdir)/pref.cpp $(srcdir)/Invoice.cpp kerpiface_skel.cpp formcity.cpp invoiceview.cpp test.cpp Invoice.moc.cpp  invoiceview.moc formcity.moc pref.moc kerp.moc kerpview.moc test.moc
	@echo 'creating kerp.all_cpp.cpp ...'; \
	rm -f kerp.all_cpp.files kerp.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> kerp.all_cpp.final; \
	for file in main.cpp kerp.cpp kerpview.cpp pref.cpp Invoice.cpp kerpiface_skel.cpp formcity.cpp invoiceview.cpp test.cpp Invoice.moc.cpp ; do \
	  echo "#include \"$$file\"" >> kerp.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> kerp.all_cpp.final; \
	done; \
	cat kerp.all_cpp.final kerp.all_cpp.files > kerp.all_cpp.cpp; \
	rm -f kerp.all_cpp.final kerp.all_cpp.files

#>+ 11
kerp_client.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/kerp_client.cpp Invoice.moc.cpp 
	@echo 'creating kerp_client.all_cpp.cpp ...'; \
	rm -f kerp_client.all_cpp.files kerp_client.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> kerp_client.all_cpp.final; \
	for file in kerp_client.cpp Invoice.moc.cpp ; do \
	  echo "#include \"$$file\"" >> kerp_client.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> kerp_client.all_cpp.final; \
	done; \
	cat kerp_client.all_cpp.final kerp_client.all_cpp.files > kerp_client.all_cpp.cpp; \
	rm -f kerp_client.all_cpp.final kerp_client.all_cpp.files

#>+ 3
clean-final:
	-rm -f kerp.all_cpp.cpp kerp_client.all_cpp.cpp

#>+ 2
final:
	$(MAKE) kerp_OBJECTS="$(kerp_final_OBJECTS)" all-am
#>+ 2
final-install:
	$(MAKE) kerp_OBJECTS="$(kerp_final_OBJECTS)" install-am
#>+ 2
no-final:
	$(MAKE) kerp_OBJECTS="$(kerp_nofinal_OBJECTS)" all-am
#>+ 2
no-final-install:
	$(MAKE) kerp_OBJECTS="$(kerp_nofinal_OBJECTS)" install-am
#>+ 3
cvs-clean:
	$(MAKE) admindir=$(top_srcdir)/admin -f $(top_srcdir)/admin/Makefile.common cvs-clean

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 15
$(srcdir)/Invoice.cpp: formcity.h invoiceview.h test.h 
kerpview.lo: kerpview.moc 
kerp.lo: kerp.moc 
$(srcdir)/main.cpp: formcity.h invoiceview.h test.h 
kerp.o: kerp.moc 
kerpview.o: kerpview.moc 
pref.lo: pref.moc 
nmcheck: 
$(srcdir)/kerp.cpp: formcity.h invoiceview.h test.h 
$(srcdir)/kerpview.cpp: formcity.h invoiceview.h test.h 
$(srcdir)/pref.cpp: formcity.h invoiceview.h test.h 
pref.o: pref.moc 
nmcheck-am: nmcheck
$(srcdir)/Invoice.h: formcity.h invoiceview.h test.h 
